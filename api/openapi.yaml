openapi: 3.0.0
info:
  contact:
    name: 紫式部/お窓
    url: https://discord.gg/KEfVkfC6Q9
  description: |-
    Sonolusの基本APIを拡張する感じ。
    ユーザー認証はFirebaseAuthorizationを通してやる。
  license:
    name: MIT
    url: https://opensource.org/licenses/mit-license.php
  termsOfService: https://discord.gg/KEfVkfC6Q9
  title: SweetPotato Server API
  version: "1.0"
servers:
- description: Local
  url: http://localhost:5000
tags:
- name: backgrounds
- name: effects
- name: engines
- name: info
- name: levels
- name: particles
- name: skins
- name: tests
- name: users
paths:
  /backgrounds/list:
    get:
      description: |-
        It returns list of background infos registered in this server
        Also it can search using query params
      operationId: getBackgroundList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
          description: OK
      summary: Get background list
      tags:
      - backgrounds
  /backgrounds/{backgroundName}:
    get:
      description: |-
        It returns specified background info
        It will raise 404 if the background is not registered in this server
      operationId: getBackground
      parameters:
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get background
      tags:
      - backgrounds
    patch:
      description: 指定された背景情報を編集します
      operationId: editBackground
      parameters:
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Edit background
      tags:
      - backgrounds
    post:
      description: 指定された背景情報をサーバーに登録します
      operationId: addBackground
      parameters:
      - explode: false
        in: path
        name: backgroundName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      summary: Add background
      tags:
      - backgrounds
  /effects/list:
    get:
      description: |-
        It returns list of effect infos registered in this server
        Also it can search using query params
      operationId: getEffectList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
          description: OK
      summary: Get effect list
      tags:
      - effects
  /effects/{effectName}:
    get:
      description: |-
        It returns specified effect info
        It will raise 404 if the effect is not registered in this server
      operationId: getEffect
      parameters:
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get effect
      tags:
      - effects
    patch:
      description: 指定されたeffectを編集します
      operationId: editEffect
      parameters:
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Effect'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Edit effect
      tags:
      - effects
    post:
      description: 指定されたeffectをサーバーに登録します
      operationId: addEffect
      parameters:
      - explode: false
        in: path
        name: effectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Effect'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      summary: Add effect
      tags:
      - effects
  /engines/list:
    get:
      description: |-
        It returns list of engine infos registered in this server
        Also it can search using query params
      operationId: getEngineList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
          description: OK
      summary: Get engine list
      tags:
      - engines
  /engines/{engineName}:
    get:
      description: |-
        It returns specified engine info
        It will raise 404 if the engine is not registered in this server
      operationId: getEngine
      parameters:
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get engine
      tags:
      - engines
    patch:
      description: 指定されたengineを編集します
      operationId: editEngine
      parameters:
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Edit engine
      tags:
      - engines
    post:
      description: 指定されたゲームエンジンをサーバーに登録します
      operationId: addEngine
      parameters:
      - explode: false
        in: path
        name: engineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      summary: Add engine
      tags:
      - engines
  /levels/list:
    get:
      description: |-
        It returns list of level infos registered in this server
        Also it can search using query params
      operationId: getLevelList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get level list
      tags:
      - levels
  /levels/{levelName}:
    get:
      description: |-
        It returns specified level info
        It will raise 404 if the level is not registered in this server
      operationId: getLevel
      parameters:
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get level
      tags:
      - levels
    patch:
      description: 指定されたlevelを編集します
      operationId: editLevel
      parameters:
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Edit level
      tags:
      - levels
    post:
      description: 指定された譜面情報をサーバーに登録します
      operationId: addLevel
      parameters:
      - explode: false
        in: path
        name: levelName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      summary: Add level
      tags:
      - levels
  /particles/list:
    get:
      description: |-
        It returns list of particle infos registered in this server
        Also it can search using query params
      operationId: getParticleList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
          description: OK
      summary: Get particle list
      tags:
      - particles
  /particles/{particleName}:
    get:
      description: |-
        It returns specified particle info
        It will raise 404 if the particle is not registered in this server
      operationId: getParticle
      parameters:
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get particle
      tags:
      - particles
    patch:
      description: 指定したparticleを編集します
      operationId: editParticle
      parameters:
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Particle'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Edit particle
      tags:
      - particles
    post:
      description: 指定されたパーティクル情報をサーバーに登録します
      operationId: addParticle
      parameters:
      - explode: false
        in: path
        name: particleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Particle'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      summary: Add particle
      tags:
      - particles
  /skins/list:
    get:
      description: |-
        It returns list of skin infos registered in this server
        Also it can search using query params
      operationId: getSkinList
      parameters:
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
          description: OK
      summary: Get skin list
      tags:
      - skins
  /skins/{skinName}:
    get:
      description: |-
        It returns specified skin info
        It will raise 404 if the skin is not registered in this server
      operationId: getSkin
      parameters:
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinResponse'
          description: OK
        "404":
          description: Not Found
      summary: Get skin
      tags:
      - skins
    patch:
      description: 指定したskinを編集します
      operationId: editSkin
      parameters:
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skin'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Edit skin
      tags:
      - skins
    post:
      description: 指定されたスキン情報をサーバーに登録します
      operationId: addSkin
      parameters:
      - explode: false
        in: path
        name: skinName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skin'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          description: Conflict
      summary: Add skin
      tags:
      - skins
  /info:
    get:
      description: |-
        It returns small list of all infos registered in this server
        (It should be trimed if the server has too many items)
      operationId: getServerInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: OK
      summary: Get server info
      tags:
      - info
    put:
      description: |-
        Sonolusのサーバー情報欄に表示されるデータを変更します
        (表示したい情報をまとめてここに投げること)
      operationId: editInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInfo'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Edit server info
      tags:
      - info
  /users/{userId}:
    get:
      description: 指定したユーザー情報を取得します
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "404":
          description: Not Found
      summary: Get user
      tags:
      - users
    patch:
      description: 指定したuser情報を編集します
      operationId: editUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Edit user
      tags:
      - users
  /users/list:
    get:
      description: サーバーに登録されたユーザー一覧を返します
      operationId: getUserList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserListResponse'
          description: OK
      summary: Get user list
      tags:
      - users
  /tests/{testId}/info:
    get:
      description: テスト個別の情報一覧を返します
      operationId: getTestServerInfo
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: OK
      summary: Get user server info
      tags:
      - tests
  /tests/{testId}/backgrounds/list:
    get:
      description: 譜面テスト用エンドポイント/ 背景一覧を返す(一般の背景リストと同じのが返される)
      operationId: getTestsBackgrounds
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
          description: OK
      summary: Get backgrounds for test
      tags:
      - tests
  /tests/{testId}/effects/list:
    get:
      description: 譜面テスト用エンドポイント/ エフェクト一覧を返す(一般のエフェクトリストと同じのが返される)
      operationId: getTestsEffects
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
          description: OK
      summary: Get effects for test
      tags:
      - tests
  /tests/{testId}/engines/list:
    get:
      description: 譜面テスト用エンドポイント/ エンジン一覧を返す(一般のエンジンリストと同じのが返される)
      operationId: getTestsEngines
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
          description: OK
      summary: Get engines for test
      tags:
      - tests
  /tests/{testId}/levels/list:
    get:
      description: 譜面テスト用エンドポイント/ 背景一覧を返す
      operationId: getTestsLevels
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get levels for test
      tags:
      - tests
  /tests/{testId}/particles/list:
    get:
      description: 譜面テスト用エンドポイント/ パーティクル一覧を返す(一般の背景リストと同じのが返される)
      operationId: getTestsParticles
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
          description: OK
      summary: Get particles for test
      tags:
      - tests
  /tests/{testId}/skins/list:
    get:
      description: 譜面テスト用エンドポイント/ スキン一覧を返す(一般のスキンリストと同じのが返される)
      operationId: getTestsSkins
      parameters:
      - explode: false
        in: path
        name: testId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
          description: OK
      summary: Get skins for test
      tags:
      - tests
  /users/{userId}/info:
    get:
      description: ユーザー個別の情報一覧を返します
      operationId: getUserServerInfo
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: OK
      summary: Get user server info
      tags:
      - users
  /users/{userId}/backgrounds/list:
    get:
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      operationId: getUsersBackgrounds
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackgroundListResponse'
          description: OK
      summary: Get backgrounds for test
      tags:
      - users
  /users/{userId}/effects/list:
    get:
      description: ユーザー個別用エンドポイント/ エフェクト一覧を返す
      operationId: getUsersEffects
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEffectListResponse'
          description: OK
      summary: Get effects for test
      tags:
      - users
  /users/{userId}/engines/list:
    get:
      description: ユーザー個別用エンドポイント/ エンジン一覧を返す
      operationId: getUsersEngines
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineListResponse'
          description: OK
      summary: Get engines for test
      tags:
      - users
  /users/{userId}/levels/list:
    get:
      description: ユーザー個別用エンドポイント/ 背景一覧を返す
      operationId: getUsersLevels
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLevelListResponse'
          description: OK
      summary: Get levels for test
      tags:
      - users
  /users/{userId}/particles/list:
    get:
      description: ユーザー個別用エンドポイント/ パーティクル一覧を返す
      operationId: getUsersParticles
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParticleListResponse'
          description: OK
      summary: Get particles for test
      tags:
      - users
  /users/{userId}/skins/list:
    get:
      description: ユーザー個別用エンドポイント/ スキン一覧を返す
      operationId: getUsersSkins
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: It localizes response items if possible
        explode: true
        in: query
        name: localization
        required: false
        schema:
          example: en
          maxLength: 50
          minLength: 1
          type: string
        style: form
      - description: It filters items for pagination if possible
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          example: 1
          maximum: 10000
          minimum: 0
          type: integer
        style: form
      - description: It filters items for search from list if possible
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          example: Redo
          maxLength: 300
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkinListResponse'
          description: OK
      summary: Get skins for test
      tags:
      - users
components:
  parameters:
    localization:
      description: It localizes response items if possible
      explode: true
      in: query
      name: localization
      required: false
      schema:
        example: en
        maxLength: 50
        minLength: 1
        type: string
      style: form
    page:
      description: It filters items for pagination if possible
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        example: 1
        maximum: 10000
        minimum: 0
        type: integer
      style: form
    keywords:
      description: It filters items for search from list if possible
      explode: true
      in: query
      name: keywords
      required: false
      schema:
        example: Redo
        maxLength: 300
        minLength: 1
        type: string
      style: form
  schemas:
    Level:
      description: |-
        A level provides a list of entities and powered by scripted behavior in engine, with skin, effect, background and particle, to create gameplay experience for players / It defines level for actual user play. It includes all data to play one level.
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Level
      example:
        updatedTime: 0
        notes: 6027456
        data:
          type: LevelData
          hash: hash
          url: url
        useBackground:
          item:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        author: author
        rating: 81
        useSkin:
          item:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        bgm:
          type: LevelData
          hash: hash
          url: url
        description: description
        title: title
        version: 1
        userId: userId
        cover:
          type: LevelData
          hash: hash
          url: url
        public: false
        engine:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        artists: artists
        useEffect:
          item:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        useParticle:
          item:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          useDefault: true
        name: name
        genre: general
        createdTime: 0
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          type: integer
        rating:
          description: Difficulty of the level
          maximum: 1000
          minimum: 1
          type: integer
        engine:
          $ref: '#/components/schemas/Engine'
        useSkin:
          $ref: '#/components/schemas/Level_useSkin'
        useBackground:
          $ref: '#/components/schemas/Level_useBackground'
        useEffect:
          $ref: '#/components/schemas/Level_useEffect'
        useParticle:
          $ref: '#/components/schemas/Level_useParticle'
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          type: string
        artists:
          description: artist names of original music
          maxLength: 100
          minLength: 1
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          type: string
        cover:
          $ref: '#/components/schemas/SonolusResourceLocator'
        bgm:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        genre:
          default: general
          description: '独自要素: 楽曲のジャンル'
          enum:
          - general
          - jpop
          - anime
          - vocaloid
          example: general
          maxLength: 20
          minLength: 1
          type: string
        public:
          default: false
          description: '独自要素: 楽曲が全体公開かどうか'
          type: boolean
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          type: string
        notes:
          description: '独自要素: 譜面内のノーツ数'
          maximum: 10000000
          minimum: 1
          type: integer
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          type: string
      title: Level
      type: object
      x-examples: {}
    Skin:
      description: |-
        A skin provides graphic elements to levels / It defines graphics for specific level
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Skin
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Server
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        texture:
          type: LevelData
          hash: hash
          url: url
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        texture:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          type: string
      title: Skin
      type: object
      x-examples: {}
    Background:
      description: |-
        A background provides background graphical element to levels / It defines background used for specific level
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Background
      example:
        image:
          type: LevelData
          hash: hash
          url: url
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 50
          minLength: 1
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        image:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          type: string
      title: Background
      type: object
      x-examples: {}
    Effect:
      description: |-
        An effect provides audio elements to levels / It defines audio effect used for specific level
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Effect
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 50
          minLength: 1
          type: string
        author:
          description: author of this content
          minLength: 1
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          type: string
      title: Effect
      type: object
      x-examples: {}
    Particle:
      description: |-
        A particle provides particle effect elements to levels / It defines particle effect used for specific level
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Particle
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        author: author
        texture:
          type: LevelData
          hash: hash
          url: url
        subtitle: subtitle
        name: name
        createdTime: 0
        description: description
        title: title
        version: 1
        userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        texture:
          $ref: '#/components/schemas/SonolusResourceLocator'
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          type: string
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          type: string
      title: Particle
      type: object
      x-examples: {}
    Engine:
      description: |-
        An engine provides scripted behaviors to levels / It defines shared game engine for playing
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Engine
      example:
        updatedTime: 0
        thumbnail:
          type: LevelData
          hash: hash
          url: url
        data:
          type: LevelData
          hash: hash
          url: url
        configuration:
          type: LevelData
          hash: hash
          url: url
        author: author
        skin:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        title: title
        version: 1
        userId: userId
        background:
          image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        subtitle: subtitle
        effect:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        name: name
        createdTime: 0
        particle:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        name:
          description: english and number only name for searching
          maxLength: 100
          minLength: 1
          type: string
        version:
          default: 1
          description: Reserved for future update. current default is 1.
          example: 1
          maximum: 100
          minimum: 1
          type: integer
        title:
          description: base title of this content
          maxLength: 100
          minLength: 1
          type: string
        subtitle:
          description: something footer(ex. featuring xyz) for this content
          maxLength: 100
          minLength: 1
          type: string
        author:
          description: author of this content
          maxLength: 50
          minLength: 1
          type: string
        thumbnail:
          $ref: '#/components/schemas/SonolusResourceLocator'
        data:
          $ref: '#/components/schemas/SonolusResourceLocator'
        configuration:
          $ref: '#/components/schemas/SonolusResourceLocator'
        skin:
          $ref: '#/components/schemas/Skin'
        background:
          $ref: '#/components/schemas/Background'
        effect:
          $ref: '#/components/schemas/Effect'
        particle:
          $ref: '#/components/schemas/Particle'
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        userId:
          description: '独自要素: 譜面作成者のユーザーID'
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          type: string
      title: Engine
      type: object
      x-examples: {}
    SonolusResourceLocator:
      description: |-
        Sonolus Resource Locator(SRL) is used in server endpoints in order for Sonolus to locate a resource.
        All resources must be gzip compressed.
        https://github.com/NonSpicyBurrito/sonolus-wiki/wiki/Resource-and-SRL
      example:
        type: LevelData
        hash: hash
        url: url
      properties:
        type:
          description: When specify type together with hash uniquely identifies a
            resource.
          enum:
          - SkinData
          - EngineThumbnail
          - EffectData
          - SkinTexture
          - ParticleData
          - EffectThumbnail
          - LevelBgm
          - BackgroundThumbnail
          - EngineConfiguration
          - LevelData
          - ParticleTexture
          - BackgroundData
          - EngineData
          - BackgroundImage
          - LevelCover
          - SkinThumbnail
          - ParticleThumbnail
          example: LevelData
          maxLength: 50
          minLength: 1
          type: string
        hash:
          description: Hash is calculated using SHA1 on the resource file
          maxLength: 100
          minLength: 1
          type: string
        url:
          description: If url starts with character /, it will be treated as relative
            path to server address.
          maxLength: 500
          minLength: 1
          type: string
      title: SonolusResourceLocator
      type: object
      x-examples:
        example:
          type: EffectData
          hash: addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39
          url: /repository/EffectData/addb1eb6402aa0dcb0d65c5a8dfd3935f08e3d39
    GetBackgroundListResponse:
      description: Response struct of getBackgroundList
      example:
        pageCount: 1
        items:
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Background'
          type: array
      required:
      - items
      - pageCount
      title: GetBackgroundListResponse
      type: object
      x-examples:
        example-1:
          value:
            pageCount: 1
            items:
            - name: string
              version: 1
              title: string
              subtitle: string
              author: string
              thumbnail:
                type: LevelData
                hash: string
                url: string
              data:
                type: LevelData
                hash: string
                url: string
              image:
                type: LevelData
                hash: string
                url: string
              createdTime: 0
              updatedTime: 0
              userId: string
    GetEffectListResponse:
      description: Response struct of getEffectList
      example:
        pageCount: 1
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Effect'
          type: array
      required:
      - items
      - pageCount
      title: GetEffectListResponse
      type: object
      x-examples: {}
    GetEngineListResponse:
      description: Response struct of getEngineList
      example:
        pageCount: 1
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Engine'
          type: array
      required:
      - items
      - pageCount
      title: GetEngineListResponse
      type: object
      x-examples: {}
    GetLevelListResponse:
      description: Response struct of getLevelList
      example:
        pageCount: 1
        items:
        - updatedTime: 0
          notes: 6027456
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          author: author
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          version: 1
          userId: userId
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
          genre: general
          createdTime: 0
        - updatedTime: 0
          notes: 6027456
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          author: author
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          version: 1
          userId: userId
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
          genre: general
          createdTime: 0
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Level'
          type: array
      required:
      - items
      - pageCount
      title: GetLevelListResponse
      type: object
      x-examples: {}
    GetParticleListResponse:
      description: Response struct of getParticleList
      example:
        pageCount: 1
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Particle'
          type: array
      required:
      - items
      - pageCount
      title: GetParticleListResponse
      type: object
      x-examples: {}
    GetSkinListResponse:
      description: Response struct of getSkinList
      example:
        pageCount: 1
        items:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        pageCount:
          default: 1
          description: used for pagination, default is 1
          example: 1
          minimum: 1
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Skin'
          type: array
      required:
      - items
      - pageCount
      title: GetSkinListResponse
      type: object
      x-examples: {}
    GetLevelResponse:
      description: Response struct of getLevel
      example:
        item:
          updatedTime: 0
          notes: 6027456
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          author: author
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          version: 1
          userId: userId
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
          genre: general
          createdTime: 0
        description: description
        recommended:
        - updatedTime: 0
          notes: 6027456
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          author: author
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          version: 1
          userId: userId
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
          genre: general
          createdTime: 0
        - updatedTime: 0
          notes: 6027456
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          author: author
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          version: 1
          userId: userId
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
          genre: general
          createdTime: 0
      properties:
        item:
          $ref: '#/components/schemas/Level'
        description:
          minLength: 1
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Level'
          type: array
      required:
      - description
      - item
      - recommended
      title: GetLevelResponse
      type: object
      x-examples: {}
    GetBackgroundResponse:
      description: Response struct of getBackground
      example:
        item:
          image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Background'
        description:
          minLength: 1
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Background'
          type: array
      required:
      - description
      - item
      - recommended
      title: GetBackgroundResponse
      type: object
      x-examples: {}
    GetEffectResponse:
      description: Response struct of getEffect
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Effect'
        description:
          minLength: 1
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Effect'
          type: array
      required:
      - description
      - item
      - recommended
      title: GetEffectResponse
      type: object
      x-examples: {}
    GetEngineResponse:
      description: Response struct of getEngine
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Engine'
        description:
          minLength: 1
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Engine'
          type: array
      required:
      - description
      - item
      - recommended
      title: GetEngineResponse
      type: object
      x-examples: {}
    GetParticleResponse:
      description: Response struct of getParticle
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Particle'
        description:
          minLength: 1
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Particle'
          type: array
      required:
      - description
      - item
      - recommended
      title: GetParticleResponse
      type: object
      x-examples: {}
    GetSkinResponse:
      description: Response struct of getSkin
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        description: description
        recommended:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
      properties:
        item:
          $ref: '#/components/schemas/Skin'
        description:
          minLength: 1
          type: string
        recommended:
          items:
            $ref: '#/components/schemas/Skin'
          type: array
      required:
      - description
      - item
      - recommended
      title: GetSkinResponse
      type: object
      x-examples: {}
    ServerInfo:
      description: Response / Request struct of getServerInfo
      example:
        skins:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        effects:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        engines:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          configuration:
            type: LevelData
            hash: hash
            url: url
          author: author
          skin:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          description: description
          title: title
          version: 1
          userId: userId
          background:
            image:
              type: LevelData
              hash: hash
              url: url
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          subtitle: subtitle
          effect:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
          name: name
          createdTime: 0
          particle:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            author: author
            texture:
              type: LevelData
              hash: hash
              url: url
            subtitle: subtitle
            name: name
            createdTime: 0
            description: description
            title: title
            version: 1
            userId: userId
        backgrounds:
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        particles:
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        - updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        levels:
        - updatedTime: 0
          notes: 6027456
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          author: author
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          version: 1
          userId: userId
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
          genre: general
          createdTime: 0
        - updatedTime: 0
          notes: 6027456
          data:
            type: LevelData
            hash: hash
            url: url
          useBackground:
            item:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          author: author
          rating: 81
          useSkin:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          bgm:
            type: LevelData
            hash: hash
            url: url
          description: description
          title: title
          version: 1
          userId: userId
          cover:
            type: LevelData
            hash: hash
            url: url
          public: false
          engine:
            updatedTime: 0
            thumbnail:
              type: LevelData
              hash: hash
              url: url
            data:
              type: LevelData
              hash: hash
              url: url
            configuration:
              type: LevelData
              hash: hash
              url: url
            author: author
            skin:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            description: description
            title: title
            version: 1
            userId: userId
            background:
              image:
                type: LevelData
                hash: hash
                url: url
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            subtitle: subtitle
            effect:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            name: name
            createdTime: 0
            particle:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
          artists: artists
          useEffect:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          useParticle:
            item:
              updatedTime: 0
              thumbnail:
                type: LevelData
                hash: hash
                url: url
              data:
                type: LevelData
                hash: hash
                url: url
              author: author
              texture:
                type: LevelData
                hash: hash
                url: url
              subtitle: subtitle
              name: name
              createdTime: 0
              description: description
              title: title
              version: 1
              userId: userId
            useDefault: true
          name: name
          genre: general
          createdTime: 0
      properties:
        levels:
          items:
            $ref: '#/components/schemas/Level'
          type: array
        skins:
          items:
            $ref: '#/components/schemas/Skin'
          type: array
        backgrounds:
          items:
            $ref: '#/components/schemas/Background'
          type: array
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          type: array
        particles:
          items:
            $ref: '#/components/schemas/Particle'
          type: array
        engines:
          items:
            $ref: '#/components/schemas/Engine'
          type: array
      required:
      - backgrounds
      - effects
      - engines
      - levels
      - particles
      - skins
      title: ServerInfo
      type: object
      x-examples:
        example-1:
          levels: []
          skins: []
          backgrounds: []
          effects: []
          particles: []
          engines: []
    User:
      description: ユーザー情報型
      example:
        updatedTime: 0
        isDeleted: false
        totalFumen: 2147483647
        createdTime: 0
        description: description
        testId: htcckfcn
        isAdmin: false
        userId: gz6xQrm79IN4BiQag78sQqYWYlC3
      properties:
        userId:
          default: gz6xQrm79IN4BiQag78sQqYWYlC3
          description: FirebaseDatabase上のユーザーID
          example: gz6xQrm79IN4BiQag78sQqYWYlC3
          maxLength: 30
          minLength: 1
          type: string
        testId:
          default: htcckfcn
          description: テスト用サーバーのエンドポイント
          example: htcckfcn
          maxLength: 8
          minLength: 8
          type: string
        isAdmin:
          default: false
          description: 管理者か否か
          type: boolean
        isDeleted:
          default: false
          description: アカウント削除フラグ(trueで削除済み扱い)
          type: boolean
        totalFumen:
          description: トータル譜面数
          maximum: 100000000000
          minimum: 0
          type: integer
        createdTime:
          description: '独自要素: データを作成したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        updatedTime:
          description: '独自要素: データを更新したエポックミリ秒(ソート用)'
          minimum: 0
          type: integer
        description:
          description: '独自要素: サイト内および譜面情報欄に表示される説明文'
          maxLength: 3000
          minLength: 1
          type: string
      title: User
      type: object
    GetUserListResponse:
      description: Structure of getList response
      example:
        total: 0
        pages: 6
        users:
        - updatedTime: 0
          isDeleted: false
          totalFumen: 2147483647
          createdTime: 0
          description: description
          testId: htcckfcn
          isAdmin: false
          userId: gz6xQrm79IN4BiQag78sQqYWYlC3
        - updatedTime: 0
          isDeleted: false
          totalFumen: 2147483647
          createdTime: 0
          description: description
          testId: htcckfcn
          isAdmin: false
          userId: gz6xQrm79IN4BiQag78sQqYWYlC3
      properties:
        users:
          description: サーバーに登録されたユーザー一覧
          items:
            $ref: '#/components/schemas/User'
          type: array
        total:
          description: 合計アカウント数
          type: integer
        pages:
          description: 合計ページ数
          type: integer
      required:
      - pages
      - total
      - users
      title: GetUserListResponse
      type: object
    Level_useSkin:
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          description: If true (recommended), default resource specified by the engine
            will be used.
          type: boolean
        item:
          $ref: '#/components/schemas/Skin'
      type: object
    Level_useBackground:
      example:
        item:
          image:
            type: LevelData
            hash: hash
            url: url
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          description: If true (recommended), default resource specified by the engine
            will be used.
          type: boolean
        item:
          $ref: '#/components/schemas/Background'
      type: object
    Level_useEffect:
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          description: If true (recommended), default resource specified by the engine
            will be used.
          type: boolean
        item:
          $ref: '#/components/schemas/Effect'
      type: object
    Level_useParticle:
      example:
        item:
          updatedTime: 0
          thumbnail:
            type: LevelData
            hash: hash
            url: url
          data:
            type: LevelData
            hash: hash
            url: url
          author: author
          texture:
            type: LevelData
            hash: hash
            url: url
          subtitle: subtitle
          name: name
          createdTime: 0
          description: description
          title: title
          version: 1
          userId: userId
        useDefault: true
      properties:
        useDefault:
          description: If true (recommended), default resource specified by the engine
            will be used.
          type: boolean
        item:
          $ref: '#/components/schemas/Particle'
      type: object
  securitySchemes: {}
