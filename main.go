/*
 * SweetPotato Server API
 *
 * Sonolusの基本APIを拡張する感じ。 ユーザー認証はFirebaseAuthorizationを通してやる。
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	potato "github.com/PurplePalette/sonolus-uploader-core/go"
)

func main() {
	log.Printf("Server started")

	BackgroundsApiService := potato.NewBackgroundsApiService()
	BackgroundsApiController := potato.NewBackgroundsApiController(BackgroundsApiService)

	EffectsApiService := potato.NewEffectsApiService()
	EffectsApiController := potato.NewEffectsApiController(EffectsApiService)

	EnginesApiService := potato.NewEnginesApiService()
	EnginesApiController := potato.NewEnginesApiController(EnginesApiService)

	InfoApiService := potato.NewInfoApiService()
	InfoApiController := potato.NewInfoApiController(InfoApiService)

	LevelsApiService := potato.NewLevelsApiService()
	LevelsApiController := potato.NewLevelsApiController(LevelsApiService)

	ParticlesApiService := potato.NewParticlesApiService()
	ParticlesApiController := potato.NewParticlesApiController(ParticlesApiService)

	SkinsApiService := potato.NewSkinsApiService()
	SkinsApiController := potato.NewSkinsApiController(SkinsApiService)

	TestsApiService := potato.NewTestsApiService()
	TestsApiController := potato.NewTestsApiController(TestsApiService)

	UsersApiService := potato.NewUsersApiService()
	UsersApiController := potato.NewUsersApiController(UsersApiService)

	router := potato.NewRouter(BackgroundsApiController, EffectsApiController, EnginesApiController, InfoApiController, LevelsApiController, ParticlesApiController, SkinsApiController, TestsApiController, UsersApiController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
