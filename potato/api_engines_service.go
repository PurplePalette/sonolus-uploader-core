/*
 * SweetPotato Server API
 *
 * Sonolusの基本APIを拡張する感じ。 ユーザー認証はFirebaseAuthorizationを通してやる。
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package potato

import (
	"context"
	"errors"
	"net/http"
)

// EnginesApiService is a service that implents the logic for the EnginesApiServicer
// This service should implement the business logic for every endpoint for the EnginesApi API.
// Include any external packages or services that will be required by this service.
type EnginesApiService struct {
}

// NewEnginesApiService creates a default api service
func NewEnginesApiService() EnginesApiServicer {
	return &EnginesApiService{}
}

// AddEngine - Add engine
func (s *EnginesApiService) AddEngine(ctx context.Context, engineName string, engine Engine) (ImplResponse, error) {
	// TODO - update AddEngine with the required logic for this service method.
	// Add api_engines_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddEngine method not implemented")
}

// EditEngine - Edit engine
func (s *EnginesApiService) EditEngine(ctx context.Context, engineName string, engine Engine) (ImplResponse, error) {
	// TODO - update EditEngine with the required logic for this service method.
	// Add api_engines_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EditEngine method not implemented")
}

// GetEngine - Get engine
func (s *EnginesApiService) GetEngine(ctx context.Context, engineName string) (ImplResponse, error) {
	// TODO - update GetEngine with the required logic for this service method.
	// Add api_engines_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetEngineResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetEngineResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEngine method not implemented")
}

// GetEngineList - Get engine list
func (s *EnginesApiService) GetEngineList(ctx context.Context, localization string, page int32, keywords string) (ImplResponse, error) {
	// TODO - update GetEngineList with the required logic for this service method.
	// Add api_engines_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetEngineListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetEngineListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEngineList method not implemented")
}
