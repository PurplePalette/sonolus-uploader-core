/*
 * SweetPotato Server API
 *
 * Sonolusの基本APIを拡張する感じ。 ユーザー認証はFirebaseAuthorizationを通してやる。
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package potato

import (
	"context"
	"errors"
	"net/http"
)

// SkinsApiService is a service that implents the logic for the SkinsApiServicer
// This service should implement the business logic for every endpoint for the SkinsApi API.
// Include any external packages or services that will be required by this service.
type SkinsApiService struct {
}

// NewSkinsApiService creates a default api service
func NewSkinsApiService() SkinsApiServicer {
	return &SkinsApiService{}
}

// AddSkin - Add skin
func (s *SkinsApiService) AddSkin(ctx context.Context, skinName string, skin Skin) (ImplResponse, error) {
	// TODO - update AddSkin with the required logic for this service method.
	// Add api_skins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddSkin method not implemented")
}

// EditSkin - Edit skin
func (s *SkinsApiService) EditSkin(ctx context.Context, skinName string, skin Skin) (ImplResponse, error) {
	// TODO - update EditSkin with the required logic for this service method.
	// Add api_skins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EditSkin method not implemented")
}

// GetSkin - Get skin
func (s *SkinsApiService) GetSkin(ctx context.Context, skinName string) (ImplResponse, error) {
	// TODO - update GetSkin with the required logic for this service method.
	// Add api_skins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetSkinResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetSkinResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSkin method not implemented")
}

// GetSkinList - Get skin list
func (s *SkinsApiService) GetSkinList(ctx context.Context, localization string, page int32, keywords string) (ImplResponse, error) {
	// TODO - update GetSkinList with the required logic for this service method.
	// Add api_skins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetSkinListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetSkinListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSkinList method not implemented")
}
