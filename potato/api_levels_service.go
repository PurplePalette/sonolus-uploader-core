/*
 * SweetPotato Server API
 *
 * Sonolusの基本APIを拡張する感じ。 ユーザー認証はFirebaseAuthorizationを通してやる。
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package potato

import (
	"context"
	"errors"
	"net/http"
)

// LevelsApiService is a service that implents the logic for the LevelsApiServicer
// This service should implement the business logic for every endpoint for the LevelsApi API.
// Include any external packages or services that will be required by this service.
type LevelsApiService struct {
}

// NewLevelsApiService creates a default api service
func NewLevelsApiService() LevelsApiServicer {
	return &LevelsApiService{}
}

// AddLevel - Add level
func (s *LevelsApiService) AddLevel(ctx context.Context, levelName string, level Level) (ImplResponse, error) {
	// TODO - update AddLevel with the required logic for this service method.
	// Add api_levels_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddLevel method not implemented")
}

// EditLevel - Edit level
func (s *LevelsApiService) EditLevel(ctx context.Context, levelName string, level Level) (ImplResponse, error) {
	// TODO - update EditLevel with the required logic for this service method.
	// Add api_levels_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EditLevel method not implemented")
}

// GetLevel - Get level
func (s *LevelsApiService) GetLevel(ctx context.Context, levelName string) (ImplResponse, error) {
	// TODO - update GetLevel with the required logic for this service method.
	// Add api_levels_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetLevelResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetLevelResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetLevel method not implemented")
}

// GetLevelList - Get level list
func (s *LevelsApiService) GetLevelList(ctx context.Context, localization string, page int32, keywords string) (ImplResponse, error) {
	// TODO - update GetLevelList with the required logic for this service method.
	// Add api_levels_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetLevelListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetLevelListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetLevelList method not implemented")
}
