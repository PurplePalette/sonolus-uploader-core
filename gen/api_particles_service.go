/*
 * SweetPotato Server API
 *
 * Sonolusの基本APIを拡張する感じ。 ユーザー認証はFirebaseAuthorizationを通してやる。
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package gen

import (
	"context"
	"net/http"
	"errors"
)

// ParticlesApiService is a service that implents the logic for the ParticlesApiServicer
// This service should implement the business logic for every endpoint for the ParticlesApi API. 
// Include any external packages or services that will be required by this service.
type ParticlesApiService struct {
}

// NewParticlesApiService creates a default api service
func NewParticlesApiService() ParticlesApiServicer {
	return &ParticlesApiService{}
}

// AddParticle - Add particle
func (s *ParticlesApiService) AddParticle(ctx context.Context, particleName string, particle Particle) (ImplResponse, error) {
	// TODO - update AddParticle with the required logic for this service method.
	// Add api_particles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddParticle method not implemented")
}

// GetParticle - Get particle
func (s *ParticlesApiService) GetParticle(ctx context.Context, particleName string) (ImplResponse, error) {
	// TODO - update GetParticle with the required logic for this service method.
	// Add api_particles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetParticleResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetParticleResponse{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetParticle method not implemented")
}

// GetParticleList - Get particle list
func (s *ParticlesApiService) GetParticleList(ctx context.Context, localization string, page float32, keywords string) (ImplResponse, error) {
	// TODO - update GetParticleList with the required logic for this service method.
	// Add api_particles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetParticleListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetParticleListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetParticleList method not implemented")
}

// PatchParticlesParticleName - Edit particle
func (s *ParticlesApiService) PatchParticlesParticleName(ctx context.Context, particleName string, particle Particle) (ImplResponse, error) {
	// TODO - update PatchParticlesParticleName with the required logic for this service method.
	// Add api_particles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	//TODO: Uncomment the next line to return response Response(403, {}) or use other options such as http.Ok ...
	//return Response(403, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchParticlesParticleName method not implemented")
}

